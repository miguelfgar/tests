<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>oauth2-testcase</groupId>
		<artifactId>test-case-multimodule-project</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<artifactId>api-security-gateway</artifactId>
	<packaging>jar</packaging>

	<name>api-security-gateway</name>
	<description>Zuul Proxy Based Security / API gateway</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<start-class>testcase.gateway.Application</start-class>
		<java.version>1.8</java.version>
		<spring.version>4.3.2.RELEASE</spring.version>

		<jdk.source>1.8</jdk.source>
		<jdk.target>1.8</jdk.target>

		<spring.boot.version>1.3.7.RELEASE</spring.boot.version>
		<spring.cloud.version>Brixton.SR5</spring.cloud.version>	     
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- SPRING BOOT -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring.boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- SPRING CLOUD -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-parent</artifactId>
				<version>${spring.cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>			
		</dependencies>
	</dependencyManagement>
	
	
	
	<dependencies>
		<dependency>
		    <groupId>org.springframework.cloud</groupId>
		    <artifactId>spring-cloud-netflix-core</artifactId>
		</dependency>				
		<dependency>
			<artifactId>httpclient</artifactId>
			<groupId>org.apache.httpcomponents</groupId>
			<version>4.4.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-zuul</artifactId>
		</dependency>
		<!-- Necessary for the token relay -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security.oauth</groupId>
			<artifactId>spring-security-oauth2</artifactId>
		</dependency> 
		
        <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>		       
	</dependencies>

	<!-- Build section copied from spring-parent-pom as we don't use it as a 
		parent and build is not inherited. Added maven filters and auto-reload -->
	<build>

		<finalName>${project.artifactId}</finalName>
		<!-- Maven filters -->
		<!-- <filters> -->
		<!-- <filter>src/main/filters/${env}.properties</filter> -->
		<!-- </filters> -->

		<!-- Turn on filtering by default for application properties -->
		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/application.yml</include>
					<include>**/application.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<excludes>
					<exclude>**/application.yml</exclude>
					<exclude>**/application.properties</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>

			<!-- Forced java version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

			<!-- Apply more sensible defaults for user projects -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>${start-class}</mainClass>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/*Tests.java</include>
						<include>**/*Test.java</include>
					</includes>
					<excludes>
						<exclude>**/Abstract*.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<archive>
						<manifest>
							<mainClass>${start-class}</mainClass>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<configuration>
					<mainClass>${start-class}</mainClass>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<configuration>
					<dotGitDirectory>${project.basedir}/../.git</dotGitDirectory>
				</configuration>
			</plugin>
			<!-- Support our own plugin -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>${start-class}</mainClass>
				</configuration>
			</plugin>

			<!-- Support shade packaging (if the user does not want to use our plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
			</plugin>

		</plugins>
	</build>

	<repositories>
		<repository>
			<id>Maven Central</id>
			<url>http://repo1.maven.org/maven2</url>
		</repository>
		<repository>
        	<id>spring-milestones</id>
        	<name>Spring Milestones</name>
        	<url>http://repo.spring.io/milestone</url>
        	<snapshots>
            	<enabled>false</enabled>
        	</snapshots>
    	</repository>		
    </repositories>

</project>
